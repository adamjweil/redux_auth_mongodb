[{"/Users/adamweil/Desktop/redux_app/client/src/index.js":"1","/Users/adamweil/Desktop/redux_app/client/src/App.js":"2","/Users/adamweil/Desktop/redux_app/client/src/reportWebVitals.js":"3","/Users/adamweil/Desktop/redux_app/client/src/components/layout/Landing.js":"4","/Users/adamweil/Desktop/redux_app/client/src/components/layout/Navbar.js":"5","/Users/adamweil/Desktop/redux_app/client/src/components/auth/Login.js":"6","/Users/adamweil/Desktop/redux_app/client/src/components/auth/Register.js":"7","/Users/adamweil/Desktop/redux_app/client/src/store.js":"8","/Users/adamweil/Desktop/redux_app/client/src/reducers/index.js":"9","/Users/adamweil/Desktop/redux_app/client/src/reducers/alert.js":"10","/Users/adamweil/Desktop/redux_app/client/src/actions/types.js":"11","/Users/adamweil/Desktop/redux_app/client/src/actions/alert.js":"12","/Users/adamweil/Desktop/redux_app/client/src/components/layout/Alert.js":"13","/Users/adamweil/Desktop/redux_app/client/src/actions/auth.js":"14","/Users/adamweil/Desktop/redux_app/client/src/reducers/auth.js":"15","/Users/adamweil/Desktop/redux_app/client/src/utils/setAuthToken.js":"16","/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Dashboard.js":"17","/Users/adamweil/Desktop/redux_app/client/src/components/routing/PrivateRoute.js":"18","/Users/adamweil/Desktop/redux_app/client/src/reducers/profile.js":"19","/Users/adamweil/Desktop/redux_app/client/src/actions/profile.js":"20","/Users/adamweil/Desktop/redux_app/client/src/components/layout/Spinner.js":"21","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/CreateProfile.js":"22","/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/DashboardActions.js":"23","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/EditProfile.js":"24","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/AddExperience.js":"25","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/AddEducation.js":"26","/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Experience.js":"27","/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Education.js":"28"},{"size":478,"mtime":1607473906745,"results":"29","hashOfConfig":"30"},{"size":2279,"mtime":1607629128235,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1607473906745,"results":"32","hashOfConfig":"30"},{"size":1080,"mtime":1607554715897,"results":"33","hashOfConfig":"30"},{"size":1458,"mtime":1607554715898,"results":"34","hashOfConfig":"30"},{"size":2251,"mtime":1607554715896,"results":"35","hashOfConfig":"30"},{"size":3394,"mtime":1607547984348,"results":"36","hashOfConfig":"30"},{"size":390,"mtime":1607485086749,"results":"37","hashOfConfig":"30"},{"size":200,"mtime":1607554715901,"results":"38","hashOfConfig":"30"},{"size":404,"mtime":1607485086747,"results":"39","hashOfConfig":"30"},{"size":570,"mtime":1607624745848,"results":"40","hashOfConfig":"30"},{"size":372,"mtime":1607539605191,"results":"41","hashOfConfig":"30"},{"size":504,"mtime":1607492931467,"results":"42","hashOfConfig":"30"},{"size":2222,"mtime":1607573471097,"results":"43","hashOfConfig":"30"},{"size":1224,"mtime":1607552715726,"results":"44","hashOfConfig":"30"},{"size":252,"mtime":1607540852451,"results":"45","hashOfConfig":"30"},{"size":1620,"mtime":1607629123254,"results":"46","hashOfConfig":"30"},{"size":579,"mtime":1607554715900,"results":"47","hashOfConfig":"30"},{"size":1002,"mtime":1607624745852,"results":"48","hashOfConfig":"30"},{"size":3148,"mtime":1607626125020,"results":"49","hashOfConfig":"30"},{"size":322,"mtime":1607554715898,"results":"50","hashOfConfig":"30"},{"size":7122,"mtime":1607615629137,"results":"51","hashOfConfig":"30"},{"size":683,"mtime":1607615629136,"results":"52","hashOfConfig":"30"},{"size":8427,"mtime":1607615629138,"results":"53","hashOfConfig":"30"},{"size":4549,"mtime":1607624745850,"results":"54","hashOfConfig":"30"},{"size":4617,"mtime":1607626125023,"results":"55","hashOfConfig":"30"},{"size":1438,"mtime":1607629125015,"results":"56","hashOfConfig":"30"},{"size":1432,"mtime":1607629120569,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"hr4t5r",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adamweil/Desktop/redux_app/client/src/index.js",[],["121","122"],"/Users/adamweil/Desktop/redux_app/client/src/App.js",[],"/Users/adamweil/Desktop/redux_app/client/src/reportWebVitals.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/layout/Landing.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/layout/Navbar.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/auth/Login.js",["123"],"import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login, loadUser } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email, password);\n        // loadUser();\n    };\n\n    // Redirect if logged in\n    if (isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n               \n                <div className=\"form-group\">\n                    <input \n                        type=\"email\" \n                        placeholder=\"Email Address\" \n                        name=\"email\" \n                        value={email} \n                        onChange={e => onChange(e)}\n                        required\n                    />\n            \n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password} \n                    onChange={e => onChange(e)}\n                    name=\"password\"\n                    minLength=\"4\"\n                />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p claasName=\"my-1\">\n                Don't have an accunt?? <Link to=\"/register\">Register</Link>\n            </p>\n        </Fragment>\n        \n    \n    );\n}\n\nLogin.protoTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","/Users/adamweil/Desktop/redux_app/client/src/components/auth/Register.js",[],"/Users/adamweil/Desktop/redux_app/client/src/store.js",[],"/Users/adamweil/Desktop/redux_app/client/src/reducers/index.js",[],"/Users/adamweil/Desktop/redux_app/client/src/reducers/alert.js",["124"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch(type) {\n        case SET_ALERT:\n            return [...state, payload]\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}","/Users/adamweil/Desktop/redux_app/client/src/actions/types.js",[],"/Users/adamweil/Desktop/redux_app/client/src/actions/alert.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/layout/Alert.js",[],"/Users/adamweil/Desktop/redux_app/client/src/actions/auth.js",[],"/Users/adamweil/Desktop/redux_app/client/src/reducers/auth.js",["125"],"import { \n    REGISTER_SUCCESS, \n    REGISTER_FAIL, \n    USER_LOADED, \n    AUTH_ERROR, \n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action) {\nconst { type, payload } = action;\n\n    switch(type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            };\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            };\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            };\n        default:\n            return state;\n    }\n}","/Users/adamweil/Desktop/redux_app/client/src/utils/setAuthToken.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Dashboard.js",["126"],"/Users/adamweil/Desktop/redux_app/client/src/components/routing/PrivateRoute.js",[],"/Users/adamweil/Desktop/redux_app/client/src/reducers/profile.js",["127"],"import { \n    GET_PROFILE,\n    PROFILE_ERROR,\n    CLEAR_PROFILE,\n    UPDATE_PROFILE\n} from '../actions/types';\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    repos: [],\n    loading: true,\n    error: {}\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    \n        switch(type) {\n            case UPDATE_PROFILE:\n            case GET_PROFILE:\n                return {\n                    ...state,\n                    profile: payload,\n                    loading: false\n                };\n            case PROFILE_ERROR:\n                return {\n                    ...state,\n                    error: payload,\n                    loading: false\n                };\n            case CLEAR_PROFILE:\n                return {\n                    ...state,\n                    profile: null,\n                    repos: [],\n                    loading: false\n                };\n            default:\n                return state;\n        }\n}","/Users/adamweil/Desktop/redux_app/client/src/actions/profile.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/layout/Spinner.js",["128"],"import React, { Fragment} from 'react';\nimport spinner from './spinner.gif';\n\n\nexport default () => (\n        <Fragment>\n            <img \n                src={spinner}\n                style={{width: '200px', margin: 'auto', display: 'block' }}\n                alt='Loading....' \n            />\n        </Fragment>\n    );\n","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/CreateProfile.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/DashboardActions.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/EditProfile.js",["129"],"import React, { useState, Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({ \n    profile: { profile, loading }, \n    createProfile, \n    getCurrentProfile, \n    history }) => {\n\n    const [formData, setFormData] = useState({\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n    \n    useEffect(() => {\n        getCurrentProfile();\n        setFormData({\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            location: loading || !profile.location ? '' : profile.location,\n            status: loading || !profile.status ? '' : profile.status,\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n            bio: loading || !profile.nio ? '' : profile.bio,\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\n            instagram: loading || !profile.social ? '' : profile.social.instagram \n        });\n    }, [loading]);\n\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram,\n    } = formData;\n\n    const onChange = e => setFormData ({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    };\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Create Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <select name=\"status\" value={status} onChange={(e => onChange(e))}>\n                    <option value=\"0\">* Select Professional Status</option>\n                    <option value=\"Developer\">Developer</option>\n                    <option value=\"Junior Developer\">Junior Developer</option>\n                    <option value=\"Senior Developer\">Senior Developer</option>\n                    <option value=\"Manager\">Manager</option>\n                    <option value=\"Student or Learning\">Student or Learning</option>\n                    <option value=\"Instructor\">Instructor or Teacher</option>\n                    <option value=\"Intern\">Intern</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={(e => onChange(e))} />\n                <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={(e => onChange(e))} />\n                <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e => onChange(e))}   />\n                <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={(e => onChange(e))}   />\n                <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                    HTML,CSS,JavaScript,PHP)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Github Username\"\n                    name=\"githubusername\"\n                    value={githubusername} \n                    onChange={(e => onChange(e))} \n                />\n                <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n                    username</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} \n                    onChange={(e => onChange(e))}></textarea>\n                <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                <button \n                        type=\"button\" \n                        className=\"btn btn-light\" \n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}>\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n\n                {displaySocialInputs && (\n\n                <Fragment>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} \n                    onChange={(e => onChange(e))} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\"  value={facebook} \n                    onChange={(e => onChange(e))} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\"  value={youtube} \n                    onChange={(e => onChange(e))} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\"  value={linkedin} \n                    onChange={(e => onChange(e))} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\"  value={instagram} \n                         onChange={(e => onChange(e))} />\n                    </div>\n                </Fragment>\n                )}\n\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">\n                    Go Back\n                </Link>\n            </form>\n        </Fragment>   \n    );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));\n","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/AddExperience.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/AddEducation.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Experience.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Education.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":5,"column":17,"nodeType":"136","messageId":"137","endLine":5,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":5,"column":1,"nodeType":"140","endLine":15,"endColumn":2},{"ruleId":"138","severity":1,"message":"139","line":18,"column":1,"nodeType":"140","endLine":52,"endColumn":2},{"ruleId":"141","severity":1,"message":"142","line":14,"column":8,"nodeType":"143","endLine":14,"endColumn":10,"suggestions":"144"},{"ruleId":"138","severity":1,"message":"139","line":16,"column":1,"nodeType":"140","endLine":43,"endColumn":2},{"ruleId":"138","severity":1,"message":"145","line":5,"column":1,"nodeType":"140","endLine":13,"endColumn":7},{"ruleId":"141","severity":1,"message":"146","line":46,"column":8,"nodeType":"143","endLine":46,"endColumn":17,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'loadUser' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["150"],"Assign arrow function to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.nio', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"156","text":"157"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.nio, profile.skills, profile.social, profile.status, profile.website]",{"range":"158","text":"159"},[548,550],"[getCurrentProfile]",[1801,1810],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.nio, profile.skills, profile.social, profile.status, profile.website]"]