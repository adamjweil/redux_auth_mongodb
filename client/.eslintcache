[{"/Users/adamweil/Desktop/redux_app/client/src/index.js":"1","/Users/adamweil/Desktop/redux_app/client/src/App.js":"2","/Users/adamweil/Desktop/redux_app/client/src/reportWebVitals.js":"3","/Users/adamweil/Desktop/redux_app/client/src/components/layout/Landing.js":"4","/Users/adamweil/Desktop/redux_app/client/src/components/layout/Navbar.js":"5","/Users/adamweil/Desktop/redux_app/client/src/components/auth/Login.js":"6","/Users/adamweil/Desktop/redux_app/client/src/components/auth/Register.js":"7","/Users/adamweil/Desktop/redux_app/client/src/store.js":"8","/Users/adamweil/Desktop/redux_app/client/src/reducers/index.js":"9","/Users/adamweil/Desktop/redux_app/client/src/reducers/alert.js":"10","/Users/adamweil/Desktop/redux_app/client/src/actions/types.js":"11","/Users/adamweil/Desktop/redux_app/client/src/actions/alert.js":"12","/Users/adamweil/Desktop/redux_app/client/src/components/layout/Alert.js":"13","/Users/adamweil/Desktop/redux_app/client/src/actions/auth.js":"14","/Users/adamweil/Desktop/redux_app/client/src/reducers/auth.js":"15","/Users/adamweil/Desktop/redux_app/client/src/utils/setAuthToken.js":"16","/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Dashboard.js":"17","/Users/adamweil/Desktop/redux_app/client/src/components/routing/PrivateRoute.js":"18","/Users/adamweil/Desktop/redux_app/client/src/reducers/profile.js":"19","/Users/adamweil/Desktop/redux_app/client/src/actions/profile.js":"20","/Users/adamweil/Desktop/redux_app/client/src/components/layout/Spinner.js":"21","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/CreateProfile.js":"22","/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/DashboardActions.js":"23","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/EditProfile.js":"24","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/AddExperience.js":"25","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/AddEducation.js":"26","/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Experience.js":"27","/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Education.js":"28","/Users/adamweil/Desktop/redux_app/client/src/components/profiles/Profiles.js":"29","/Users/adamweil/Desktop/redux_app/client/src/components/profiles/ProfileItem.js":"30","/Users/adamweil/Desktop/redux_app/client/src/components/profile/Profile.js":"31","/Users/adamweil/Desktop/redux_app/client/src/components/profile/ProfileTop.js":"32","/Users/adamweil/Desktop/redux_app/client/src/components/profile/ProfileAbout.js":"33"},{"size":478,"mtime":1607473906745,"results":"34","hashOfConfig":"35"},{"size":2524,"mtime":1607701978381,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1607473906745,"results":"37","hashOfConfig":"35"},{"size":1080,"mtime":1607554715897,"results":"38","hashOfConfig":"35"},{"size":1581,"mtime":1607648650977,"results":"39","hashOfConfig":"35"},{"size":2251,"mtime":1607646287152,"results":"40","hashOfConfig":"35"},{"size":3394,"mtime":1607547984348,"results":"41","hashOfConfig":"35"},{"size":390,"mtime":1607485086749,"results":"42","hashOfConfig":"35"},{"size":200,"mtime":1607554715901,"results":"43","hashOfConfig":"35"},{"size":404,"mtime":1607485086747,"results":"44","hashOfConfig":"35"},{"size":703,"mtime":1607648650973,"results":"45","hashOfConfig":"35"},{"size":372,"mtime":1607539605191,"results":"46","hashOfConfig":"35"},{"size":504,"mtime":1607492931467,"results":"47","hashOfConfig":"35"},{"size":2222,"mtime":1607644353201,"results":"48","hashOfConfig":"35"},{"size":1277,"mtime":1607648650982,"results":"49","hashOfConfig":"35"},{"size":252,"mtime":1607540852451,"results":"50","hashOfConfig":"35"},{"size":2013,"mtime":1607648650974,"results":"51","hashOfConfig":"35"},{"size":579,"mtime":1607554715900,"results":"52","hashOfConfig":"35"},{"size":1382,"mtime":1607648650983,"results":"53","hashOfConfig":"35"},{"size":6084,"mtime":1607648650972,"results":"54","hashOfConfig":"35"},{"size":322,"mtime":1607554715898,"results":"55","hashOfConfig":"35"},{"size":7122,"mtime":1607632140219,"results":"56","hashOfConfig":"35"},{"size":683,"mtime":1607615629136,"results":"57","hashOfConfig":"35"},{"size":8446,"mtime":1607648650980,"results":"58","hashOfConfig":"35"},{"size":4573,"mtime":1607648650979,"results":"59","hashOfConfig":"35"},{"size":4640,"mtime":1607648650978,"results":"60","hashOfConfig":"35"},{"size":1630,"mtime":1607648650976,"results":"61","hashOfConfig":"35"},{"size":1618,"mtime":1607648650975,"results":"62","hashOfConfig":"35"},{"size":1457,"mtime":1607701976532,"results":"63","hashOfConfig":"35"},{"size":1012,"mtime":1607648650981,"results":"64","hashOfConfig":"35"},{"size":1691,"mtime":1607701971952,"results":"65","hashOfConfig":"35"},{"size":2140,"mtime":1607701953054,"results":"66","hashOfConfig":"35"},{"size":964,"mtime":1607701962403,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"hr4t5r",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adamweil/Desktop/redux_app/client/src/index.js",[],["142","143"],"/Users/adamweil/Desktop/redux_app/client/src/App.js",[],"/Users/adamweil/Desktop/redux_app/client/src/reportWebVitals.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/layout/Landing.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/layout/Navbar.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/auth/Login.js",["144"],"import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login, loadUser } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email, password);\n        // loadUser();\n    };\n\n    // Redirect if logged in\n    if (isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n               \n                <div className=\"form-group\">\n                    <input \n                        type=\"email\" \n                        placeholder=\"Email Address\" \n                        name=\"email\" \n                        value={email} \n                        onChange={e => onChange(e)}\n                        required\n                    />\n            \n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password} \n                    onChange={e => onChange(e)}\n                    name=\"password\"\n                    minLength=\"4\"\n                />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p claasName=\"my-1\">\n                Don't have an accunt?? <Link to=\"/register\">Register</Link>\n            </p>\n        </Fragment>\n        \n    \n    );\n}\n\nLogin.protoTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","/Users/adamweil/Desktop/redux_app/client/src/components/auth/Register.js",[],"/Users/adamweil/Desktop/redux_app/client/src/store.js",[],"/Users/adamweil/Desktop/redux_app/client/src/reducers/index.js",[],"/Users/adamweil/Desktop/redux_app/client/src/reducers/alert.js",["145"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch(type) {\n        case SET_ALERT:\n            return [...state, payload]\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}","/Users/adamweil/Desktop/redux_app/client/src/actions/types.js",[],"/Users/adamweil/Desktop/redux_app/client/src/actions/alert.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/layout/Alert.js",[],"/Users/adamweil/Desktop/redux_app/client/src/actions/auth.js",[],"/Users/adamweil/Desktop/redux_app/client/src/reducers/auth.js",["146"],"import { \n    REGISTER_SUCCESS, \n    REGISTER_FAIL, \n    USER_LOADED, \n    AUTH_ERROR, \n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOGOUT,\n    ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n};\n\nexport default function(state = initialState, action) {\nconst { type, payload } = action;\n\n    switch(type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            };\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            };\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case ACCOUNT_DELETED:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            };\n        default:\n            return state;\n    }\n};","/Users/adamweil/Desktop/redux_app/client/src/utils/setAuthToken.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Dashboard.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/routing/PrivateRoute.js",[],"/Users/adamweil/Desktop/redux_app/client/src/reducers/profile.js",["147"],"import { \n    GET_PROFILE,\n    PROFILE_ERROR,\n    CLEAR_PROFILE,\n    UPDATE_PROFILE,\n    GET_PROFILES,\n    GET_REPOS\n} from '../actions/types';\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    repos: [],\n    loading: true,\n    error: {}\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n        switch(type) {\n            case UPDATE_PROFILE:\n            case GET_PROFILE:\n                return {\n                    ...state,\n                    profile: payload,\n                    loading: false\n                };\n            case GET_PROFILES:\n                return {\n                    ...state,\n                    profiles: payload,\n                    loading:false\n                };\n            case PROFILE_ERROR:\n                return {\n                    ...state,\n                    error: payload,\n                    loading: false\n                };\n            case CLEAR_PROFILE:\n                return {\n                    ...state,\n                    profile: null,\n                    repos: [],\n                    loading: false\n                };\n            case GET_REPOS:\n                return {\n                    ...state,\n                    repos: payload,\n                    loading: false\n                };\n            default:\n                return state;\n        };\n}","/Users/adamweil/Desktop/redux_app/client/src/actions/profile.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/layout/Spinner.js",["148"],"import React, { Fragment} from 'react';\nimport spinner from './spinner.gif';\n\n\nexport default () => (\n        <Fragment>\n            <img \n                src={spinner}\n                style={{width: '200px', margin: 'auto', display: 'block' }}\n                alt='Loading....' \n            />\n        </Fragment>\n    );\n","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/CreateProfile.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/DashboardActions.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/EditProfile.js",["149"],"import React, { useState, Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({ \n    profile: { profile, loading }, \n    createProfile, \n    getCurrentProfile, \n    history }) => {\n\n    const [formData, setFormData] = useState({\n        company: '',\n        website: '',\n        location: '',\n        status: '',\n        skills: '',\n        githubusername: '',\n        bio: '',\n        twitter: '',\n        facebook: '',\n        linkedin: '',\n        youtube: '',\n        instagram: ''\n    });\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\n    \n    useEffect(() => {\n        getCurrentProfile();\n        setFormData({\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            location: loading || !profile.location ? '' : profile.location,\n            status: loading || !profile.status ? '' : profile.status,\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n            bio: loading || !profile.bio ? '' : profile.bio,\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\n            instagram: loading || !profile.social ? '' : profile.social.instagram \n        });\n    }, [loading, getCurrentProfile]);\n\n    const {\n        company,\n        website,\n        location,\n        status,\n        skills,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        linkedin,\n        youtube,\n        instagram,\n    } = formData;\n\n    const onChange = e => setFormData ({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        createProfile(formData, history, true);\n    };\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Create Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                <select name=\"status\" value={status} onChange={(e => onChange(e))}>\n                    <option value=\"0\">* Select Professional Status</option>\n                    <option value=\"Developer\">Developer</option>\n                    <option value=\"Junior Developer\">Junior Developer</option>\n                    <option value=\"Senior Developer\">Senior Developer</option>\n                    <option value=\"Manager\">Manager</option>\n                    <option value=\"Student or Learning\">Student or Learning</option>\n                    <option value=\"Instructor\">Instructor or Teacher</option>\n                    <option value=\"Intern\">Intern</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n                <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={(e => onChange(e))} />\n                <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={(e => onChange(e))} />\n                <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e => onChange(e))}   />\n                <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={(e => onChange(e))}   />\n                <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                    HTML,CSS,JavaScript,PHP)</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Github Username\"\n                    name=\"githubusername\"\n                    value={githubusername} \n                    onChange={(e => onChange(e))} \n                />\n                <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n                    username</small\n                >\n                </div>\n                <div className=\"form-group\">\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} \n                    onChange={(e => onChange(e))}></textarea>\n                <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                <button \n                        type=\"button\" \n                        className=\"btn btn-light\" \n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}>\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n\n                {displaySocialInputs && (\n\n                <Fragment>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} \n                    onChange={(e => onChange(e))} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\"  value={facebook} \n                    onChange={(e => onChange(e))} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\"  value={youtube} \n                    onChange={(e => onChange(e))} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\"  value={linkedin} \n                    onChange={(e => onChange(e))} />\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\"  value={instagram} \n                         onChange={(e => onChange(e))} />\n                    </div>\n                </Fragment>\n                )}\n\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link to=\"/dashboard\" className=\"btn btn-light my-1\">\n                    Go Back\n                </Link>\n            </form>\n        </Fragment>   \n    );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile));\n","/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/AddExperience.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/profile-forms/AddEducation.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Experience.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/dashboard/Education.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/profiles/Profiles.js",["150"],"/Users/adamweil/Desktop/redux_app/client/src/components/profiles/ProfileItem.js",["151","152"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\nconst ProfileItem = ({ profile: {\n    user: { _id, username, avatar },\n    status,\n    company,\n    location,\n    skills\n}}) => {\n    return (\n        <div className='profile bg-light'>\n            <img className='round-img' src={avatar} />\n            <div>\n                <h2>{username}</h2>\n                <p>{status} {company && <span> at {company} </span>}</p>\n                <p className='my-1'>{location && <span>{location}</span>} </p>\n                <Link to={`/profile/${_id}`} className='btn btn-primary'>\n                    View Profile\n                </Link>\n        </div>\n        <ul>\n            {skills.slice(0, 4).map((skill, index) => (\n                <li key={index} className='text-primary'>\n                    <i className='fas fa-check'></i>{skill}\n                </li>\n            ))}\n        </ul>\n    </div>\n    )\n}\n\nProfileItem.propTypes = {\n\n}\n\nexport default ProfileItem\n","/Users/adamweil/Desktop/redux_app/client/src/components/profile/Profile.js",["153"],"/Users/adamweil/Desktop/redux_app/client/src/components/profile/ProfileTop.js",[],"/Users/adamweil/Desktop/redux_app/client/src/components/profile/ProfileAbout.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":5,"column":17,"nodeType":"160","messageId":"161","endLine":5,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":5,"column":1,"nodeType":"164","endLine":15,"endColumn":2},{"ruleId":"162","severity":1,"message":"163","line":19,"column":1,"nodeType":"164","endLine":54,"endColumn":2},{"ruleId":"162","severity":1,"message":"163","line":18,"column":1,"nodeType":"164","endLine":56,"endColumn":2},{"ruleId":"162","severity":1,"message":"165","line":5,"column":1,"nodeType":"164","endLine":13,"endColumn":7},{"ruleId":"166","severity":1,"message":"167","line":46,"column":8,"nodeType":"168","endLine":46,"endColumn":36,"suggestions":"169"},{"ruleId":"158","severity":1,"message":"170","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":14},{"ruleId":"158","severity":1,"message":"171","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":17},{"ruleId":"172","severity":1,"message":"173","line":14,"column":13,"nodeType":"174","endLine":14,"endColumn":55},{"ruleId":"158","severity":1,"message":"175","line":6,"column":26,"nodeType":"160","messageId":"161","endLine":6,"endColumn":37},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'loadUser' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["178"],"'Link' is defined but never used.","'PropTypes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getProfiles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"181","text":"182"},[1801,1829],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]"]